apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        consumerProguardFiles 'proguard-rules.pro'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndkVersion "21.3.6528147"
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_shared"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        prefab true
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }

}

dependencies {
    implementation deps.androidx.annotation
    implementation deps.kotlin.stdlib

    // use compileOnly for pure native lib, otherwise the lib's end-user will encounters error:
    //  More than one file was found with OS independent path 'lib/abi/lib***.so'
    compileOnly project(':lame')

    api project(':api')
}

// least on the Android studio 4.1, still needs to schedule the build tasks for the dependence native lib
tasks.whenTaskAdded { task ->
    if (task.name.startsWith('generateJsonModel')) {
        def variant = task.name.substring('generateJsonModel'.length())
        task.dependsOn ":lame:prefab" + variant + "Package"
    }
}

//region maven-android
apply plugin: 'maven'

group = GROUP_ID
def artifact = "core"
version = '0.4.0'

uploadArchives {
    repositories.mavenDeployer {
        repository(url: LOCAL_REPO_URL)
        pom.groupId = GROUP_ID
        pom.artifactId = artifact
        pom.version = version
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

artifacts { archives sourcesJar }
//endregion
